name: Assign secrets to repo on issue submit

on:
  issues:
    types: [opened]

jobs:
  assign-secrets:
    runs-on: ubuntu-latest
    environment: assign-secrets
    if: contains(github.event.issue.labels.*.name, 'assign-secrets')

    steps:
      - name: Get the repo name from the issue body
        id: get-repo-name
        uses: actions/github-script@v7
        with:
          script: |
            const match = context.payload.issue.body.match(/### repo\s+([\w\/-]+)/);
            const repoInput = match ? match[1] : null;

            if (!repoInput) {
              core.setFailed('Repository name not found in the issue body');
              return;
            }

            const [owner, repository] = repoInput.split('/');

            if (owner !== '8x10') {
              core.setFailed('Repository owner is not 8x10!');
              return;
            }

            core.notice(`Extracted repo name from issue: ${owner}/${repository}`);

            core.setOutput('repoInput', repoInput);
            core.setOutput('owner', owner);
            core.setOutput('repository', repository);

      # - name: Update issue title
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #   run: |
      #     gh issue edit ${{ github.event.issue.number }} --repo ${{ github.repository }} --title '[assign-secrets] ${{ steps.get-repo-name.outputs.repoInput }}'

      # - name: Add action url to issue comment
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #   run: |
      #     gh issue comment ${{ github.event.issue.number }} --repo ${{ github.repository }} --body 'Github workflow handling your request: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'

      - name: bot token
        id: create-github-app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.TEST_APP_ID }}
          private-key: ${{ secrets.TEST_APP_PRIVATE_KEY }}
          owner: ${{ steps.get-repo-name.outputs.owner }}
          repositories: ${{ steps.get-repo-name.outputs.repository }}

      - name: Assign secrets to the repo
        env:
          GH_TOKEN: ${{ steps.create-github-app-token.outputs.token }}
        run: |
          repository_id=$(gh api -H "Accept: application/vnd.github+json" repos/${{ steps.get-repo-name.outputs.owner }}/${{ steps.get-repo-name.outputs.repository }} | jq .id)
          echo "Repository ID: $repository_id"
          gh api --method PUT -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ steps.github-app-token.outputs.token }}" /orgs/${{ steps.get-repo-name.outputs.owner }}/actions/secrets/ASD_TEST_WORKFLOW/repositories/${repository_id}

      # - name: Close issue
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #   run: |
      #     gh issue close ${{ github.event.issue.number }} --repo ${{ github.repository }} --comment "completed" --reason "Completed"

      # - name: Close issue with failure
      #   if: ${{ failure() }}
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #   run: |
      #     gh issue close ${{ github.event.issue.number }} --repo ${{ github.repository }} --comment "Failed, verify if the repo is correct and try again" --reason "not planned"
